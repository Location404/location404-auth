version: '3.8'

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  useridentity-service:
    image: mcr.microsoft.com/dotnet/sdk:9.0
    volumes:
      - ./src:/app/src
    working_dir: /app
    command: >
      dotnet watch run --project ./src/UserIdentityService.API/UserIdentityService.API.csproj --urls "http://+:8080"
    ports:
      - "8080:8080"
    environment:
      - ConnectionStrings__UserIdentityDatabaseDevelopment=Server=postgres;Port=5432;Database=${POSTGRES_DB};User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};
      - Observability__Loki__EndpointUrl=${LOKI_ENDPOINT_URL}
      - Observability__Tracing__EndpointUrl=${TEMPO_ENDPOINT_URL}
    depends_on:
      - postgres
      - prometheus
      - loki
      - tempo

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"

  tempo:
    image: grafana/tempo:latest
    command: ["-config.file=/etc/tempo.yml"]
    volumes:
      - ./tempo-config.yml:/etc/tempo.yml
    ports:
      - "3200:3200"
      - "4317:4317"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-provisioning/:/etc/grafana/provisioning/
    depends_on:
      - prometheus
      - loki
      - tempo

volumes:
  postgres_data: